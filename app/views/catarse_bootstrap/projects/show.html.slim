- content_for :title do
  = resource.name

= content_for :meta_tags do
  - if ['online', 'waiting_funds', 'successful'].include? @project.state
    meta name="robots" content="index, follow"
  - else
    meta name="robots" content="noindex, nofollow"

  - if @update
    meta name="description" content=@update.title
    meta property="og:title" content=@update.title
    meta property="og:description" content=@update.comment
    meta property="og:url" content=project_by_slug_url(@project.permalink, update_id: @update.id, locale: I18n.locale)
  - else
    meta name="description" content=@project.headline
    meta property="og:title" content=@project.name
    meta property="og:description" content=@project.headline
    meta property="og:url" content=project_by_slug_url(@project.permalink, locale: I18n.locale)
  meta property="og:type" content='cause'
  meta property="og:image" content=@project.display_image('project_thumb_facebook')
  meta property="og:site_name" content=CatarseSettings[:company_name]
  meta property="fb:admins" content="#{fb_admins}"

= render 'shared/header'

#project-state-warning.warning[data-key=Digest::MD5.hexdigest("#{current_user.try(:id)}-#{@project.id}-#{@project.state}")]
  = render @project.state_warning_template

section.project-show.with-warning
  section
    header.line-box.line-box-with-tabs
      .row
        .large-12.columns
          h2.project-title
            = @project.name
            small
              | #{t('.title.project_from')} #{link_to(@project.category, explore_path(anchor: "by_category_id/#{@project.category_id}"))} #{t('.title.project_by')} #{link_to(@project.user.display_name, user_path(@project.user))}
              |
              - @project.channels.each do |c|
                  = link_to(c.name, root_url(subdomain: c.permalink), class: 'channel')

        nav.tabs-nav
          = link_to '#about', 'id' => 'about_link', 'class' => 'selected', 'data-target' => '#project_about.content' do
                = t('.menu.about')
          = link_to '#updates', 'id' => 'updates_link', 'data-target' => '#project_updates' do
            = t('.menu.updates')
            span.count=" (#{@updates_count})"
          = link_to '#contributions', 'id' => 'contributions_link', 'data-target' => '#project_contributions' do
            = t('.menu.contributions')
            span.count=" (#{@project.total_contributions})"
          = link_to '#comments', 'id' => 'comments_link', 'data-target' => '#project_comments' do
            = t('.menu.comments')
            | &nbsp; (
            fb:comments-count href="#{request.base_url}/#{request.fullpath.split('/')[2]}"
            | )
          - if policy(@project).update?
            = link_to '#edit', 'id' => 'edit_link', 'data-target' => '#project_edit' do
              = t('.menu.edit')
            = link_to '#reports', 'id' => 'reports_link', 'data-target' => '#project_reports' do
              = t('.menu.reports')

    section.row.project-content
      section.large-8.columns
        - if policy(@project).update?
          #project_reports.content.hide
            = render partial: 'project_reports'
          #project_edit.content.hide
            = render partial: 'project_edit'

        #project_updates.content.hide[data-path=project_updates_path(project_id: @project.id)]
          - if policy(@project).update?
            = render template: 'projects/updates/new'
            h3.updates_section_title = 'Novidades publicadas'
          .results
          #updates-loading.loading= image_tag "loading.gif"

        #project_contributions.content.hide[data-path=project_contributions_path(project_id: @project.id)]
          - if policy(@project).update?
            = radio_button_tag(:contribution_state, "available_to_count", checked: true)
            = label_tag(:contribution_state, t('projects.project_contributions.confirmed'), class: "contribution-radio")
            = radio_button_tag(:contribution_state, "waiting_confirmation")
            = label_tag(:contribution_state, t('projects.project_contributions.pending'), class: "contribution-radio")
          .results &nbsp;
          #contributions-loading.loading= image_tag "loading.gif"

        #project_comments.content.hide

        #project_about.project-description.content= render 'project_about'


      aside.large-4.columns.sidebar
        .project-statistics
          p.project-contributions
            = @project.total_contributions
            span = t('projects.show.statistics.contributions')
          p.project-goal
            = @project.display_pledged
            span = t('projects.show.statistics.goal', total: @project.display_goal).html_safe
          - if @project.draft? || @project.rejected?
            p.project-days
              = @project.online_days
              span #{@project.online_days} #{pluralize_without_number(@project.online_days, I18n.t('datetime.prompts.day').downcase)} #{pluralize_without_number(@project.online_days, t('remaining_singular'), t('remaining_plural'))}
          - else
            p.project-days
              = @project.remaining_days
              span #{@project.time_to_go[:unit].capitalize} #{pluralize_without_number(@project.time_to_go[:time], t('remaining_singular'), t('remaining_plural'))}
          - if @project.online? && !@project.expired?
            = form_tag(new_project_contribution_path(@project), method: :get, id: 'contribute_project_form') do
              = submit_tag t('projects.contribute_project.submit'), disabled: (not @project.online?), class: "button action project-support"
          p class="project-status #{@project.state}"
            = raw(t("projects.contribute_project.display_status.#{@project.display_status}", goal: @project.display_goal, date: @project.display_expires_at))


        .project-creator
          = @project.user.display_image_html
          p
            = t('project_by')
          p.project-creator-name
            = link_to @project.user.display_name, user_path(@project.user)
          p.project-creator-city
            | #{@project.user.address_city}
          p.project-creator-count
            = t('projects.count_contributed_projects', total: @project.user.total_contributed_projects)
          p.project-creator-bio
            = @project.user.bio

          ul.project-creator-links
            - if @project.user.email
              li
                = mail_to @project.user.email, @project.user.email, target: '_blank'
            - if @project.user.facebook_link
              li
                = link_to @project.user.facebook_link, @project.user.facebook_link, target: '_blank'
            - if @project.user.twitter
              li
                = link_to @project.user.twitter_link, @project.user.twitter_link, target: '_blank'




        - if policy(@project).update?
          .new-reward
            h4
              = t('.no_rewards_warning_title')
            p
              = t('.no_rewards_warning')
            .new_reward_content.hide

            = link_to t('.menu.add_reward'), 'javascript:void(0);', data: {target: '.new_reward_content', path: new_project_reward_path(@project)}, class: 'button small negative show_reward_form'


            /.skull-modal.new_reward_content.hide
              .skull-modal-header
                h3= t('projects.rewards.new_reward')
                a class='skull-modal-close' href='javascript:void(0);' &times;
              .skull-modal-body
                = image_tag 'loading.gif'
        ul.rewards-list#rewards[data-can_update="#{policy(@project).update?}" data-index_path=project_rewards_path(@project)]
          .reward-loader
            = image_tag 'loading.gif'

= render 'shared/footer'
